{"programModules":{"EXT130MI":{"program":"EXT130MI","triggers":{},"transactions":{"LstFinishGoods":{"sourceUuid":"26f1e050-a265-4af6-b81d-9c43636d81b2","name":"LstFinishGoods","program":"EXT130MI","description":"List Finish Goods","active":true,"multi":true,"modified":1727622909388,"modifiedBy":"900073","outputFields":[{"name":"WHLO","description":"Warehouse","length":3,"mandatory":false,"type":"A"},{"name":"ITNO","description":"Item number","length":15,"mandatory":false,"type":"A"},{"name":"ITDS","description":"Name","length":60,"mandatory":false,"type":"A"},{"name":"QMGP","description":"Quality group","length":10,"mandatory":false,"type":"A"},{"name":"BANO","description":"Lot number","length":20,"mandatory":false,"type":"A"},{"name":"CAMU","description":"Container","length":20,"mandatory":false,"type":"A"},{"name":"STAS","description":"Status - balance ID","length":1,"mandatory":false,"type":"A"},{"name":"QSTA","description":"QI request status","length":1,"mandatory":false,"type":"N"},{"name":"MFDT","description":"Manufacturing date","length":8,"mandatory":false,"type":"N"},{"name":"REDA","description":"Receipt date","length":8,"mandatory":false,"type":"N"},{"name":"PLGR","description":"Work center","length":8,"mandatory":false,"type":"A"},{"name":"EXPI","description":"Expiration date","length":8,"mandatory":false,"type":"N"},{"name":"AGDY","description":"Aging days","length":5,"mandatory":false,"type":"N"},{"name":"AGHO","description":"Aging hours","length":4,"mandatory":false,"type":"N"},{"name":"AGMI","description":"Aging minutes","length":2,"mandatory":false,"type":"N"},{"name":"MWHL","description":"Manufacturing Warehouse","length":3,"mandatory":false,"type":"A"},{"name":"BREM","description":"Remark","length":20,"mandatory":false,"type":"A"},{"name":"QAPR","description":"QI request approval status","length":1,"mandatory":false,"type":"N"},{"name":"RFTX","description":"Reference text","length":40,"mandatory":false,"type":"A"},{"name":"STQT","description":"On-hand balance approved","length":15,"mandatory":false,"type":"N"},{"name":"QRID","description":"QI request ID","length":8,"mandatory":false,"type":"A"},{"name":"QIAD","description":"Quality inspection approval date","length":8,"mandatory":false,"type":"N"},{"name":"PRDT","description":"Priority date","length":8,"mandatory":false,"type":"N"}],"inputFields":[{"name":"CONO","description":"Company","length":3,"mandatory":true,"type":"A"},{"name":"HOUR","description":"Hours","length":2,"mandatory":true,"type":"N"}],"utilities":["DateUtil"],"market":"ALL"}},"batches":{},"advancedPrograms":{}}},"utilities":{},"sources":{"26f1e050-a265-4af6-b81d-9c43636d81b2":{"uuid":"26f1e050-a265-4af6-b81d-9c43636d81b2","updated":1726697927257,"updatedBy":"900073","created":1727622859972,"createdBy":"900073","apiVersion":"UNKNOWN","beVersion":"16.0.0.20240717001700.11","language":"GROOVY","codeHash":"0ED292EB13CE008C1C20932AE0C4AA3CD77B621397E0957EDF0B67B68E541611","code":""}}}