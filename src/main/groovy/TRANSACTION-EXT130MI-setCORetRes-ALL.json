{"programModules":{"EXT130MI":{"program":"EXT130MI","triggers":{},"transactions":{"setCORetRes":{"sourceUuid":"6e6db5e6-667f-4baa-9287-d777130d05c1","name":"setCORetRes","program":"EXT130MI","description":"setCORetRes","active":true,"multi":false,"modified":1676896508411,"modifiedBy":"900071","outputFields":[],"inputFields":[{"name":"WHLO","description":"Warehouse","length":3,"mandatory":false,"type":"A"},{"name":"REPN","description":"Receiving number","length":12,"mandatory":true,"type":"A"},{"name":"ITNO","description":"Item number","length":15,"mandatory":true,"type":"A"},{"name":"BANO","description":"Lot number","length":20,"mandatory":true,"type":"A"},{"name":"CAMU","description":"Container","length":20,"mandatory":true,"type":"A"},{"name":"WHSL","description":"Location","length":10,"mandatory":true,"type":"A"},{"name":"TRES","description":"Responsible","length":10,"mandatory":false,"type":"A"}],"utilities":[],"market":"ALL"}},"batches":{},"advancedPrograms":{}}},"utilities":{},"sources":{"6e6db5e6-667f-4baa-9287-d777130d05c1":{"uuid":"6e6db5e6-667f-4baa-9287-d777130d05c1","updated":1676765981315,"updatedBy":"900107","created":1676896502909,"createdBy":"900071","apiVersion":"UNKNOWN","beVersion":"16.0.0.20221210044646.7","language":"GROOVY","codeHash":"5C4E195D9442950661C83D54540AA5C76F54F732FBBF0C3A6F2F07F204C46038","code":""}}}