{"programModules":{"EXT130MI":{"program":"EXT130MI","triggers":{},"transactions":{"setCORetRes":{"sourceUuid":"6e6db5e6-667f-4baa-9287-d777130d05c1","name":"setCORetRes","program":"EXT130MI","description":"setCORetRes","active":true,"multi":false,"modified":1695989534176,"modifiedBy":"900073","outputFields":[],"inputFields":[{"name":"WHLO","description":"Warehouse","length":3,"mandatory":false,"type":"A","refField":null},{"name":"REPN","description":"Receiving number","length":12,"mandatory":true,"type":"A","refField":null},{"name":"ITNO","description":"Item number","length":15,"mandatory":true,"type":"A","refField":null},{"name":"BANO","description":"Lot number","length":20,"mandatory":true,"type":"A","refField":null},{"name":"CAMU","description":"Container","length":20,"mandatory":true,"type":"A","refField":null},{"name":"WHSL","description":"Location","length":10,"mandatory":true,"type":"A","refField":null},{"name":"TRES","description":"Responsible","length":10,"mandatory":false,"type":"A","refField":null}],"utilities":[],"market":"ALL"}},"batches":{},"advancedPrograms":{}}},"utilities":{},"sources":{"6e6db5e6-667f-4baa-9287-d777130d05c1":{"uuid":"6e6db5e6-667f-4baa-9287-d777130d05c1","updated":1751261793663,"updatedBy":"900073","created":1695989343431,"createdBy":"900073","apiVersion":"0.21","beVersion":"16.0.0.20250414161800.9","language":"GROOVY","codeHash":"1A9733ECD72CCD486F4BD59E19944897246459BE2BDC7A77B459C9B8A3B38CCD","code":""}}}