{"programModules":{"EXT130MI":{"program":"EXT130MI","triggers":{},"transactions":{"LstReceiving":{"sourceUuid":"f8b32df4-0138-4ce3-955d-5bed4539efb8","name":"LstReceiving","program":"EXT130MI","description":"List Receiving","active":true,"multi":true,"modified":1727622898817,"modifiedBy":"900073","outputFields":[{"name":"WHLO","description":"warehouse","length":3,"mandatory":false,"type":"A"},{"name":"ITNO","description":"item number","length":15,"mandatory":false,"type":"A"},{"name":"BANO","description":"lot number","length":20,"mandatory":false,"type":"A"},{"name":"CAMU","description":"container","length":20,"mandatory":false,"type":"A"},{"name":"STAS","description":"status - balance ID","length":1,"mandatory":false,"type":"A"},{"name":"STQT","description":"on-hand balance approved","length":15,"mandatory":false,"type":"N"},{"name":"RGDT","description":"entry date","length":8,"mandatory":false,"type":"N"},{"name":"ITDS","description":"name","length":60,"mandatory":false,"type":"A"},{"name":"STAT","description":"status","length":2,"mandatory":false,"type":"A"},{"name":"QSTA","description":"QI request status","length":1,"mandatory":false,"type":"N"},{"name":"QRID","description":"QI request ID","length":8,"mandatory":false,"type":"A"},{"name":"QAPR","description":"QI request approval status","length":1,"mandatory":false,"type":"N"},{"name":"EXPI","description":"expiration date","length":8,"mandatory":false,"type":"N"},{"name":"MFDT","description":"manufacturing date","length":8,"mandatory":false,"type":"N"},{"name":"REDA","description":"receipt date","length":8,"mandatory":false,"type":"N"},{"name":"SEDT","description":"sales date","length":8,"mandatory":false,"type":"N"},{"name":"SUNO","description":"supplier","length":10,"mandatory":false,"type":"A"},{"name":"TRDT","description":"transaction date","length":8,"mandatory":false,"type":"N"},{"name":"QRI1","description":"QI request ID","length":8,"mandatory":false,"type":"A"},{"name":"QAP1","description":"QI request approval status","length":1,"mandatory":false,"type":"N"},{"name":"QST1","description":"QI request status","length":1,"mandatory":false,"type":"N"},{"name":"RIDN","description":"Order number","length":10,"mandatory":false,"type":"A"},{"name":"SUN1","description":"Supplier","length":10,"mandatory":false,"type":"A"},{"name":"ITTY","description":"item type","length":3,"mandatory":false,"type":"A"}],"inputFields":[{"name":"CONO","description":"Company","length":3,"mandatory":true,"type":"A"},{"name":"HOUR","description":"Hours","length":2,"mandatory":true,"type":"N"}],"utilities":["DateUtil"],"market":"ALL"}},"batches":{},"advancedPrograms":{}}},"utilities":{},"sources":{"f8b32df4-0138-4ce3-955d-5bed4539efb8":{"uuid":"f8b32df4-0138-4ce3-955d-5bed4539efb8","updated":1726697303222,"updatedBy":"900073","created":1727622859972,"createdBy":"900073","apiVersion":"UNKNOWN","beVersion":"16.0.0.20240717001700.11","language":"GROOVY","codeHash":"17EF5D90BE16C7B26318E01CB7AF00F5AEF3D4B2408D1FCA6C4831DD10F58D14","code":""}}}