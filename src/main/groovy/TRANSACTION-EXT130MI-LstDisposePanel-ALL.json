{"programModules":{"EXT130MI":{"program":"EXT130MI","triggers":{},"transactions":{"LstDisposePanel":{"sourceUuid":"69f41b55-85b1-4607-aa85-a0e6b3f29a70","name":"LstDisposePanel","program":"EXT130MI","description":"List Dispose Panel","active":true,"multi":true,"modified":1721764949458,"modifiedBy":"900046","outputFields":[{"name":"WHLO","description":"Warehouse","length":3,"mandatory":false,"type":"A"},{"name":"TRNR","description":"Order number","length":10,"mandatory":false,"type":"A"},{"name":"TRTP","description":"Order type","length":3,"mandatory":false,"type":"A"},{"name":"TRQT","description":"Transaction quantity - basic U/M","length":15,"mandatory":false,"type":"N"},{"name":"ALQT","description":"Allocated quantity - basic U/M","length":15,"mandatory":false,"type":"N"},{"name":"DPQT","description":"Dispatched quantity","length":15,"mandatory":false,"type":"N"},{"name":"QTRL","description":"Relocated quantity","length":15,"mandatory":false,"type":"N"},{"name":"QTIT","description":"Quantity in transit","length":15,"mandatory":false,"type":"N"},{"name":"RPQT","description":"Reported quantity","length":15,"mandatory":false,"type":"N"},{"name":"TRSH","description":"Highest status - stock transaction","length":2,"mandatory":false,"type":"A"},{"name":"RGDT","description":"Entry date","length":8,"mandatory":false,"type":"N"},{"name":"RESP","description":"Responsible","length":10,"mandatory":false,"type":"A"},{"name":"TX60","description":"Text","length":60,"mandatory":false,"type":"A"},{"name":"TX61","description":"Text","length":60,"mandatory":false,"type":"A"}],"inputFields":[{"name":"CONO","description":"Company","length":3,"mandatory":true,"type":"A"}],"utilities":["DateUtil"],"market":"ALL"}},"batches":{},"advancedPrograms":{}}},"utilities":{},"sources":{"69f41b55-85b1-4607-aa85-a0e6b3f29a70":{"uuid":"69f41b55-85b1-4607-aa85-a0e6b3f29a70","updated":1721966575795,"updatedBy":"900046","created":1721327446520,"createdBy":"900046","apiVersion":"0.21","beVersion":"16.0.0.20240418165458.8","language":"GROOVY","codeHash":"B4B18D479D77E1CB120D1A323CB4CDC692C893AAE3B540B7241DE3BF544FFB66","code":""}}}