{"utilities":{},"programModules":{"EXT050MI":{"program":"EXT050MI","triggers":{},"transactions":{"AddSalesTaxExmp":{"sourceUuid":"f2b3f25e-1b72-42df-a36a-e1ae270ecfba","name":"AddSalesTaxExmp","program":"EXT050MI","description":"Add Sales Tax Exmp","active":true,"multi":false,"modified":1668708108122,"modifiedBy":"900066","outputFields":[],"inputFields":[{"name":"CONO","description":"Company","length":3,"mandatory":true,"type":"N"},{"name":"DIVI","description":"Division","length":3,"mandatory":true,"type":"A"},{"name":"TYPE","description":"Transaction type","length":1,"mandatory":true,"type":"N"},{"name":"PRIO","description":"Priority","length":2,"mandatory":true,"type":"N"},{"name":"OBV1","description":"Start value 1 or Item Number","length":15,"mandatory":true,"type":"A"},{"name":"OBV2","description":"Start value 2 or State Id","length":15,"mandatory":true,"type":"A"},{"name":"OBV3","description":"Start value 3","length":15,"mandatory":false,"type":"A"},{"name":"OBV4","description":"Start value 4","length":15,"mandatory":false,"type":"A"},{"name":"FRDT","description":"From date","length":8,"mandatory":false,"type":"N"},{"name":"TODT","description":"To date","length":8,"mandatory":false,"type":"N"},{"name":"RTXC","description":"Tax code customer/address","length":3,"mandatory":true,"type":"A"},{"name":"TXID","description":"Text identity","length":13,"mandatory":false,"type":"N"}],"utilities":[]}},"batches":{}}},"sources":{"f2b3f25e-1b72-42df-a36a-e1ae270ecfba":{"uuid":"f2b3f25e-1b72-42df-a36a-e1ae270ecfba","updated":1675763758636,"updatedBy":"900049","created":1668360657220,"createdBy":"900066","apiVersion":"0.9","beVersion":"16.0.0.20221110165806","codeHash":"ED58B5C07416A7867732F850A217ABB5DFC0F70697F0DE2FC7764FEC51EA321D","code":""}}}